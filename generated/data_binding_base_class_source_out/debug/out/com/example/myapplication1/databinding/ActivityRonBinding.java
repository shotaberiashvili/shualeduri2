// Generated by view binder compiler. Do not edit!
package com.example.myapplication1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRonBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView question3;

  @NonNull
  public final Button rightron1;

  @NonNull
  public final Button wrongron1;

  @NonNull
  public final Button wrongron2;

  @NonNull
  public final Button wrongron3;

  private ActivityRonBinding(@NonNull ConstraintLayout rootView, @NonNull TextView question3,
      @NonNull Button rightron1, @NonNull Button wrongron1, @NonNull Button wrongron2,
      @NonNull Button wrongron3) {
    this.rootView = rootView;
    this.question3 = question3;
    this.rightron1 = rightron1;
    this.wrongron1 = wrongron1;
    this.wrongron2 = wrongron2;
    this.wrongron3 = wrongron3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ron, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.question3;
      TextView question3 = ViewBindings.findChildViewById(rootView, id);
      if (question3 == null) {
        break missingId;
      }

      id = R.id.rightron1;
      Button rightron1 = ViewBindings.findChildViewById(rootView, id);
      if (rightron1 == null) {
        break missingId;
      }

      id = R.id.wrongron1;
      Button wrongron1 = ViewBindings.findChildViewById(rootView, id);
      if (wrongron1 == null) {
        break missingId;
      }

      id = R.id.wrongron2;
      Button wrongron2 = ViewBindings.findChildViewById(rootView, id);
      if (wrongron2 == null) {
        break missingId;
      }

      id = R.id.wrongron3;
      Button wrongron3 = ViewBindings.findChildViewById(rootView, id);
      if (wrongron3 == null) {
        break missingId;
      }

      return new ActivityRonBinding((ConstraintLayout) rootView, question3, rightron1, wrongron1,
          wrongron2, wrongron3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
