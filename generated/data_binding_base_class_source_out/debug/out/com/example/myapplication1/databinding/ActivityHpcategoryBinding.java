// Generated by view binder compiler. Do not edit!
package com.example.myapplication1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHpcategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView choosehpcategory;

  @NonNull
  public final TextView choosehpcategory1;

  @NonNull
  public final Button easyhp;

  @NonNull
  public final Button hardhp;

  @NonNull
  public final Button mediumhp;

  private ActivityHpcategoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView choosehpcategory, @NonNull TextView choosehpcategory1,
      @NonNull Button easyhp, @NonNull Button hardhp, @NonNull Button mediumhp) {
    this.rootView = rootView;
    this.choosehpcategory = choosehpcategory;
    this.choosehpcategory1 = choosehpcategory1;
    this.easyhp = easyhp;
    this.hardhp = hardhp;
    this.mediumhp = mediumhp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHpcategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHpcategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hpcategory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHpcategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.choosehpcategory;
      TextView choosehpcategory = ViewBindings.findChildViewById(rootView, id);
      if (choosehpcategory == null) {
        break missingId;
      }

      id = R.id.choosehpcategory1;
      TextView choosehpcategory1 = ViewBindings.findChildViewById(rootView, id);
      if (choosehpcategory1 == null) {
        break missingId;
      }

      id = R.id.easyhp;
      Button easyhp = ViewBindings.findChildViewById(rootView, id);
      if (easyhp == null) {
        break missingId;
      }

      id = R.id.hardhp;
      Button hardhp = ViewBindings.findChildViewById(rootView, id);
      if (hardhp == null) {
        break missingId;
      }

      id = R.id.mediumhp;
      Button mediumhp = ViewBindings.findChildViewById(rootView, id);
      if (mediumhp == null) {
        break missingId;
      }

      return new ActivityHpcategoryBinding((ConstraintLayout) rootView, choosehpcategory,
          choosehpcategory1, easyhp, hardhp, mediumhp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
