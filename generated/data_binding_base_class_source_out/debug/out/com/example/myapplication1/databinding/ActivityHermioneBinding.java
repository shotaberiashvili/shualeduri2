// Generated by view binder compiler. Do not edit!
package com.example.myapplication1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHermioneBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView question2;

  @NonNull
  public final Button righthermione1;

  @NonNull
  public final Button wronghermione1;

  @NonNull
  public final Button wronghermione2;

  @NonNull
  public final Button wronghermione3;

  private ActivityHermioneBinding(@NonNull ConstraintLayout rootView, @NonNull TextView question2,
      @NonNull Button righthermione1, @NonNull Button wronghermione1,
      @NonNull Button wronghermione2, @NonNull Button wronghermione3) {
    this.rootView = rootView;
    this.question2 = question2;
    this.righthermione1 = righthermione1;
    this.wronghermione1 = wronghermione1;
    this.wronghermione2 = wronghermione2;
    this.wronghermione3 = wronghermione3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHermioneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHermioneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hermione, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHermioneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.question2;
      TextView question2 = ViewBindings.findChildViewById(rootView, id);
      if (question2 == null) {
        break missingId;
      }

      id = R.id.righthermione1;
      Button righthermione1 = ViewBindings.findChildViewById(rootView, id);
      if (righthermione1 == null) {
        break missingId;
      }

      id = R.id.wronghermione1;
      Button wronghermione1 = ViewBindings.findChildViewById(rootView, id);
      if (wronghermione1 == null) {
        break missingId;
      }

      id = R.id.wronghermione2;
      Button wronghermione2 = ViewBindings.findChildViewById(rootView, id);
      if (wronghermione2 == null) {
        break missingId;
      }

      id = R.id.wronghermione3;
      Button wronghermione3 = ViewBindings.findChildViewById(rootView, id);
      if (wronghermione3 == null) {
        break missingId;
      }

      return new ActivityHermioneBinding((ConstraintLayout) rootView, question2, righthermione1,
          wronghermione1, wronghermione2, wronghermione3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
