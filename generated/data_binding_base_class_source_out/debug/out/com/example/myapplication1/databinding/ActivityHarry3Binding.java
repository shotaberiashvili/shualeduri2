// Generated by view binder compiler. Do not edit!
package com.example.myapplication1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHarry3Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView hardquestion1;

  @NonNull
  public final Button righthardharry1;

  @NonNull
  public final Button wronghardharry1;

  @NonNull
  public final Button wronghardharry2;

  private ActivityHarry3Binding(@NonNull ConstraintLayout rootView, @NonNull TextView hardquestion1,
      @NonNull Button righthardharry1, @NonNull Button wronghardharry1,
      @NonNull Button wronghardharry2) {
    this.rootView = rootView;
    this.hardquestion1 = hardquestion1;
    this.righthardharry1 = righthardharry1;
    this.wronghardharry1 = wronghardharry1;
    this.wronghardharry2 = wronghardharry2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHarry3Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHarry3Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_harry3, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHarry3Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hardquestion1;
      TextView hardquestion1 = ViewBindings.findChildViewById(rootView, id);
      if (hardquestion1 == null) {
        break missingId;
      }

      id = R.id.righthardharry1;
      Button righthardharry1 = ViewBindings.findChildViewById(rootView, id);
      if (righthardharry1 == null) {
        break missingId;
      }

      id = R.id.wronghardharry1;
      Button wronghardharry1 = ViewBindings.findChildViewById(rootView, id);
      if (wronghardharry1 == null) {
        break missingId;
      }

      id = R.id.wronghardharry2;
      Button wronghardharry2 = ViewBindings.findChildViewById(rootView, id);
      if (wronghardharry2 == null) {
        break missingId;
      }

      return new ActivityHarry3Binding((ConstraintLayout) rootView, hardquestion1, righthardharry1,
          wronghardharry1, wronghardharry2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
